public interface IAction {
    public Target
}

public class SwordMan {
    public class Swing : IAction {
        private SwordMan user;
        public Swing (SwordMan user) {
            this.user = user;
        }

        public void Run (Target[] targets) {
            user.Play(user.Animations.Swing)
            .Frames[1].OnEnd(() => {
                target.Damage(10);
            });
        }

        public void RequestTargetsAndRun (Controller controller) {
            var target = controller.Target(
                Amount = TargetConditions.Amount.Single,
                Side = TargetConditions.Side.Enemy,
            );
            this.Run(targets);
        }
    }
}

public readonly struct TargetCondition {
    public enum Relations { Ally = 1, Enemy = -1, }
    public Relations Relation;

    public enum Rows { Front, Back, Any }
}

public class ActionButton {
    public IAction Action;
    public void OnClick (Controller controller) {
        //Action.Execute(Action.RequestTargets(controller))
        //Action.RequestTargetsAndRun(controller);
        //var targets = Action.TargetConditions.Select(conditions => Targeting.Select(conditions)).ToArray();
        var targets = Targeting.Select(Action.TargetConditions);
        Action.Execute(targets);
    }
}

public class ActionStore {
    public IAction[] Actions { get; }

}

// NOTE
// could do IAnimationStore

public interface IAction {

}

public abstract class GroupTargetAction {

}

public abstract class SingleTargetAction {

}